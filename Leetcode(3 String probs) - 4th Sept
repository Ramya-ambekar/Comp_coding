Problem 1 : Shuffle String
Example 1:
Input: s = "codeleet", indices = [4,5,6,7,0,2,1,3]
Output: "leetcode"
Explanation: As shown, "codeleet" becomes "leetcode" after shuffling.

METHOD 1 : 

class Solution {
    public String restoreString(String s, int[] indices) {
        StringBuilder result = new StringBuilder(s);
        for(int i=0;i<s.length();i++){
            result.setCharAt(indices[i],s.charAt(i));
        }
        return result.toString();
    }
}


METHOD 2:

class Solution {
    public String restoreString(String s, int[] indices) {
        StringBuilder result = new StringBuilder();
        char[] str = new char[indices.length];
        //Arrays.sort(indices);
        for(int i=0;i<indices.length;i++){
            System.out.println(s.charAt(i)+" "+i);
            str[indices[i]]=s.charAt(i);
        }
        return String.valueOf(str);

    }
}



Problem 2 : Reverse String (Characters)
Example 1:
Input: s = ["h","e","l","l","o"]
Output: ["o","l","l","e","h"]

class Solution {
    public void reverseString(char[] s) {
       int start =0;
       int end = s.length-1;

       while(start<=end){
           char temp = s[start];
           s[start] = s[end];
           s[end] = temp;

            start++;
            end--;
       }
       
    }
}



Problem 3 : Sorting the Sentence
Example 1:
Input: s = "is2 sentence4 This1 a3"
Output: "This is a sentence"

class Solution {
    public String sortSentence(String s) {
        String[] words = s.split(" ");
        String[] result = new String[words.length];
        for(String word : words){
            int number = word.length() -1;
            if(Character.isDigit(word.charAt(number))){
                int index = word.charAt(number) - '1';
                result[index] = word.substring(0,number);;
            }
        }
        return String.join(" ", result);
    }
}
