Question 1 : Reverse a String
      Approach 1 : CharArray
            public class Main {
                  public static void main(String[] args) {
                    String s = "environment";
                	  char[] chars = s.toCharArray();
                    String res = "";
                    for(int i=chars.length-1;i>=0;i--){
                      res += String.valueOf(chars[i]);
                    }
                    System.out.print(res);
                  }
                }

      Approach 2 : StringBuilder
            public class Main {
                  public class Main {
                      public static void main(String[] args) {
                        String s = "environment";
                    	  StringBuilder rev = new StringBuilder(s);
                        rev = rev.reverse();
                        System.out.print(rev.toString());
                      }
                    }




Question 2 : Remove Duplicate characters

import java.util.*;
// Online Java Compiler
// Use this editor to write, compile and run your Java code online
public class Main {
  public static void main(String[] args) {
    String s = "programming";
    String result = "";
	  HashSet<Character> set = new HashSet();
    for(char c : s.toCharArray()){
      if(!set.contains(c)){
        set.add(c);
        result += String.valueOf(c);
      }
    }
    System.out.print(result);
  }
}



Question 3 : Reverse words in a sentence

import java.util.*;
// Online Java Compiler
// Use this editor to write, compile and run your Java code online
public class Main {
  public static void main(String[] args) {
    String s = "Scaler topics";
    String[] words = s.split(" ");
    for(int i=words.length -1 ;i>=0;i--){
      System.out.print(words[i]+" ");
    } 
    
  }
}

Question 4: Occurence of each character
import java.util.*;
// Online Java Compiler
// Use this editor to write, compile and run your Java code online
public class Main {
  public static void main(String[] args) {
    String s = "environmentalists";
    HashMap<Character,Integer> map = new HashMap<>();
    for(char c : s.toCharArray()){
      if(map.containsKey(c)){
        map.put(c,(map.get(c)+1));
      }else{
        map.put(c,1);
      }
    }
    System.out.print(map);
    
  }
}


Question 5 : First non repeating character

	Approach 1 : Without Collections

		import java.util.*;
		// Online Java Compiler
		// Use this editor to write, compile and run your Java code online
		public class Main {
		  public static void main(String[] args) {
		    String s = "scalars";
		    for(int i=0;i<s.length();i++){
		      boolean unique = true;
		      for(int j=i+1;j<s.length();j++){
		        if(s.charAt(i)==s.charAt(j)){
		          unique = false;
		          break;
		        }
		      }
		      if(unique){
		        System.out.print(s.charAt(i));
		        break;
		      }
		    }
		    
		    
		  }
		}

		Approach 2 : Using Collections(HashMap)

			import java.util.*;
			import java.util.Map.Entry;
			
			// Online Java Compiler
			// Use this editor to write, compile and run your Java code online
			public class Main {
			  public static void main(String[] args) {
			    String s = "scalars";
			    HashMap<Character,Integer> map = new HashMap<>();
			    for(char c : s.toCharArray()){
			      map.put(c,(map.getOrDefault(c,0)+1));
			    }
			   for (char c : s.toCharArray()) {
			            if (map.get(c) == 1) {
			                System.out.print(c);
			                break;
			            }
			        }
			    
			    
			  }
			}
			
			
Question 6: Occurrences of the character 'a' with a count of how many times it appears in the string


import java.util.*;
import java.util.Map.Entry;

// Online Java Compiler
// Use this editor to write, compile and run your Java code online
public class Main {
  public static void main(String[] args) {
    String s = "scaLars";
    StringBuilder res = new StringBuilder();
    int count = 0;
    for(char c : s.toCharArray()){
      if(c=='a'){
        count = count + 1;
        res.append(count);
      }else {
                res.append(c);
            }
    }
    System.out.print(res);
    
  }
}


Question 8 : Sort characters in String in alphabetical order

Approach 1 :  Without using Arrays

public class Main {
  public static void main(String[] args) {
      String s = "rock";
      char[] chars = s.toCharArray();
      char temp ;
      int[] nums = new int[s.length()];
      for(int i=0;i<chars.length;i++){
       for(int j=i+1;j<chars.length;j++){
        if(chars[i]>chars[j]){
          temp = chars[i];
          chars[i] = chars[j];
          chars[j] = temp;
        }
       }
      }
      StringBuilder res = new StringBuilder();
      for(char c : chars)
      {
        res.append(c);
      
      }    
      System.out.print(res);  
  }
}


Approach 2 : Using Arrays.sort approach

import java.util.*;
public class Main {
  public static void main(String[] args) {
      String s = "rock";
      char[] chars = s.toCharArray();
      Arrays.sort(chars);     
      System.out.print(new String(chars));  
  }
}



Question 9 : Remove whitespaces in a string

import java.util.*;
public class Main {
  public static void main(String[] args) {
      String s = "ro c    k s  t a   r";
      String res ;
      res = s.replaceAll("\\s","");
      System.out.print(res);
  }
}
