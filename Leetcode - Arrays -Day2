Question 1 : 1512. Number Of Good pairs

class Solution {
    public int numIdenticalPairs(int[] nums) {
        int n = nums.length;
        int count =0;
       for(int i=0;i<n;i++){
           for(int j=i+1;j<n;j++){
               if(i < j && nums[i] == nums[j]){
                count++;
               }
           }
       } 
       return count;
    }
}


Question 2 : 2798. Number of Employees Who Met the Target

class Solution {
    public int numberOfEmployeesWhoMetTarget(int[] hours, int target) {
        int count = 0;
        Arrays.sort(hours);
        for(int i=0;i<hours.length;i++){
            if(hours[i]>=target){
                count = (hours.length-1) - i+1;
                break;
            }
        }
        return count;
    }
}



Question 3 :  1431. Kids With the Greatest Number of Candies

class Solution {
    public List<Boolean> kidsWithCandies(int[] candies, int extraCandies) {
        int max = candies[0];
        int n = candies.length;
        List<Boolean> values = new ArrayList<Boolean>();
        for(int i=1;i<n;i++){
            if(max<candies[i]){
                max=candies[i];
                System.out.println(max);
            }
        }
        for(int i=0;i<n;i++){
            if(candies[i]+extraCandies>=max){
                values.add(true);
            }else{
                values.add(false);
            }
        }

        return values;
    }
}
